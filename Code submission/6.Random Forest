{"cells":[{"cell_type":"markdown","metadata":{"id":"4HxLxhIQlQcA"},"source":["# Imports"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"et_svpkIgrmR"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sb\n","import matplotlib.pyplot as plt\n","import nltk\n","from nltk.corpus import stopwords\n","from sklearn.metrics import *\n","from sklearn import preprocessing\n","from sklearn import metrics\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.svm import SVC\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.ensemble import RandomForestClassifier \n","from sklearn.model_selection import train_test_split\n","import time\n","from xgboost import XGBClassifier\n","from xgboost import plot_importance\n","from sklearn.metrics import recall_score\n","\n","from tqdm.notebook import tqdm, trange\n","tqdm.pandas()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SZJ4aaalqWJ2"},"outputs":[],"source":["# use feature importance for feature selection\n","from numpy import loadtxt\n","from numpy import sort\n","from xgboost import XGBClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","from sklearn.feature_selection import SelectFromModel"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20288,"status":"ok","timestamp":1668683400489,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"P4X1T11Ak3ZI","outputId":"5e5c4bbe-a601-4309-ec6d-44797282f7ba"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["# upload the csv to your google drive and import from your google drive directory to save upload time\n","from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sfDNvsFHGnv1"},"outputs":[],"source":["from sklearn.ensemble import RandomForestClassifier\n","import sklearn.metrics\n","from sklearn.model_selection import train_test_split"]},{"cell_type":"markdown","metadata":{"id":"xW4q5AiElTVR"},"source":["# Random Forest"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":3171,"status":"ok","timestamp":1668683403653,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"f4wTAMEbk3pD","outputId":"3053d87e-38c5-4299-a24e-3e03230ce932"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                   title   department  \\\n","0                                       marketing intern    Marketing   \n","1                customer service cloud video production      Success   \n","2                     commission machinery assistant cma          NaN   \n","3                        account executive washington dc        Sales   \n","4                                    bill review manager          NaN   \n","...                                                  ...          ...   \n","17875                      account director distribution        Sales   \n","17876                                 payroll accountant   Accounting   \n","17877  project cost control staff engineer cost contr...          NaN   \n","17878                                   graphic designer          NaN   \n","17879                          web application developer  Engineering   \n","\n","                                         company_profile  \\\n","0      food52 create groundbreaking award win cooking...   \n","1      90 second world cloud video production service...   \n","2      valor service provide workforce solution meet ...   \n","3      passion improve quality life geography heart e...   \n","4      spotsource solution llc global human capital m...   \n","...                                                  ...   \n","17875  vend look awesome new talent come join u work ...   \n","17876  weblinc e commerce platform service provider f...   \n","17877  provide full time permanent position many medi...   \n","17878                                                NaN   \n","17879  vend look awesome new talent come join u work ...   \n","\n","                                             description  \\\n","0      food52 fast grow james beard award win online ...   \n","1      organise focus vibrant awesome passion custome...   \n","2      client locate houston actively seek experience...   \n","3      company esri environmental system research ins...   \n","4      job title itemization review managerlocation f...   \n","...                                                  ...   \n","17875  case first time visit website vend award win w...   \n","17876  payroll accountant focus primarily payroll fun...   \n","17877  experienced project cost control staff enginee...   \n","17878  nemsia studio look experienced visual graphic ...   \n","17879  vend award win web base point sale software re...   \n","\n","                                            requirements  \\\n","0      experience content management system major plu...   \n","1      expect key responsibility communicate client 9...   \n","2      implement pre commission commission procedure ...   \n","3      education bachelor master gi business administ...   \n","4      qualification right license state texasdiploma...   \n","...                                                  ...   \n","17875  ace role eat comprehensive statement work brea...   \n","17876  b b accounting desire fun love genuine passion...   \n","17877  least 12 year professional experience ability ...   \n","17878  1 must fluent late version corel amp adobe cc ...   \n","17879  want hear depth understand oo programmingyou t...   \n","\n","                                                benefits  telecommuting  \\\n","0                                                    NaN              0   \n","1      get usthrough part 90 second team gain experie...              0   \n","2                                                    NaN              0   \n","3      culture anything corporate collaborative creat...              0   \n","4                                     full benefit offer              0   \n","...                                                  ...            ...   \n","17875  expect u open culture openly share result inpu...              0   \n","17876  health amp wellnessmedical planprescription dr...              0   \n","17877                                                NaN              0   \n","17878  competitive salary compensation base experienc...              0   \n","17879                                                NaN              0   \n","\n","       has_company_logo  has_questions employment_type  ...  \\\n","0                     1              0           Other  ...   \n","1                     1              0       Full-time  ...   \n","2                     1              0             NaN  ...   \n","3                     1              0       Full-time  ...   \n","4                     1              1       Full-time  ...   \n","...                 ...            ...             ...  ...   \n","17875                 1              1       Full-time  ...   \n","17876                 1              1       Full-time  ...   \n","17877                 0              0       Full-time  ...   \n","17878                 0              1        Contract  ...   \n","17879                 1              1       Full-time  ...   \n","\n","      company_profile_length requirements_length benefits_length  \\\n","0                         90                  77               0   \n","1                        122                 123             117   \n","2                         79                 123               0   \n","3                         58                 124              79   \n","4                        155                  66               3   \n","...                      ...                 ...             ...   \n","17875                    170                 113              78   \n","17876                    204                  67              52   \n","17877                     23                  98               0   \n","17878                      0                  58              20   \n","17879                    170                  92               0   \n","\n","      description_length  country        state          city  min_salary  \\\n","0                     84       US           NY      New York           0   \n","1                    208       NZ  Unspecified      Auckland           0   \n","2                     30       US           IA         Wever           0   \n","3                    226       US           DC    Washington           0   \n","4                    131       US           FL    Fort Worth           0   \n","...                  ...      ...          ...           ...         ...   \n","17875                132       CA           ON       Toronto           0   \n","17876                119       US           PA  Philadelphia           0   \n","17877                120       US           TX       Houston           0   \n","17878                 43       NG           LA         Lagos           0   \n","17879                194       NZ            N    Wellington           0   \n","\n","       max_salary  salary_specified  \n","0               0                 0  \n","1               0                 0  \n","2               0                 0  \n","3               0                 0  \n","4               0                 0  \n","...           ...               ...  \n","17875           0                 0  \n","17876           0                 0  \n","17877           0                 0  \n","17878           0                 0  \n","17879           0                 0  \n","\n","[17880 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-6e5e8450-4280-47ee-966c-2475edd7c0bd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>department</th>\n","      <th>company_profile</th>\n","      <th>description</th>\n","      <th>requirements</th>\n","      <th>benefits</th>\n","      <th>telecommuting</th>\n","      <th>has_company_logo</th>\n","      <th>has_questions</th>\n","      <th>employment_type</th>\n","      <th>...</th>\n","      <th>company_profile_length</th>\n","      <th>requirements_length</th>\n","      <th>benefits_length</th>\n","      <th>description_length</th>\n","      <th>country</th>\n","      <th>state</th>\n","      <th>city</th>\n","      <th>min_salary</th>\n","      <th>max_salary</th>\n","      <th>salary_specified</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>marketing intern</td>\n","      <td>Marketing</td>\n","      <td>food52 create groundbreaking award win cooking...</td>\n","      <td>food52 fast grow james beard award win online ...</td>\n","      <td>experience content management system major plu...</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Other</td>\n","      <td>...</td>\n","      <td>90</td>\n","      <td>77</td>\n","      <td>0</td>\n","      <td>84</td>\n","      <td>US</td>\n","      <td>NY</td>\n","      <td>New York</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>customer service cloud video production</td>\n","      <td>Success</td>\n","      <td>90 second world cloud video production service...</td>\n","      <td>organise focus vibrant awesome passion custome...</td>\n","      <td>expect key responsibility communicate client 9...</td>\n","      <td>get usthrough part 90 second team gain experie...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>122</td>\n","      <td>123</td>\n","      <td>117</td>\n","      <td>208</td>\n","      <td>NZ</td>\n","      <td>Unspecified</td>\n","      <td>Auckland</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>commission machinery assistant cma</td>\n","      <td>NaN</td>\n","      <td>valor service provide workforce solution meet ...</td>\n","      <td>client locate houston actively seek experience...</td>\n","      <td>implement pre commission commission procedure ...</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>79</td>\n","      <td>123</td>\n","      <td>0</td>\n","      <td>30</td>\n","      <td>US</td>\n","      <td>IA</td>\n","      <td>Wever</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>account executive washington dc</td>\n","      <td>Sales</td>\n","      <td>passion improve quality life geography heart e...</td>\n","      <td>company esri environmental system research ins...</td>\n","      <td>education bachelor master gi business administ...</td>\n","      <td>culture anything corporate collaborative creat...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>58</td>\n","      <td>124</td>\n","      <td>79</td>\n","      <td>226</td>\n","      <td>US</td>\n","      <td>DC</td>\n","      <td>Washington</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>bill review manager</td>\n","      <td>NaN</td>\n","      <td>spotsource solution llc global human capital m...</td>\n","      <td>job title itemization review managerlocation f...</td>\n","      <td>qualification right license state texasdiploma...</td>\n","      <td>full benefit offer</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>155</td>\n","      <td>66</td>\n","      <td>3</td>\n","      <td>131</td>\n","      <td>US</td>\n","      <td>FL</td>\n","      <td>Fort Worth</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>17875</th>\n","      <td>account director distribution</td>\n","      <td>Sales</td>\n","      <td>vend look awesome new talent come join u work ...</td>\n","      <td>case first time visit website vend award win w...</td>\n","      <td>ace role eat comprehensive statement work brea...</td>\n","      <td>expect u open culture openly share result inpu...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>170</td>\n","      <td>113</td>\n","      <td>78</td>\n","      <td>132</td>\n","      <td>CA</td>\n","      <td>ON</td>\n","      <td>Toronto</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17876</th>\n","      <td>payroll accountant</td>\n","      <td>Accounting</td>\n","      <td>weblinc e commerce platform service provider f...</td>\n","      <td>payroll accountant focus primarily payroll fun...</td>\n","      <td>b b accounting desire fun love genuine passion...</td>\n","      <td>health amp wellnessmedical planprescription dr...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>204</td>\n","      <td>67</td>\n","      <td>52</td>\n","      <td>119</td>\n","      <td>US</td>\n","      <td>PA</td>\n","      <td>Philadelphia</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17877</th>\n","      <td>project cost control staff engineer cost contr...</td>\n","      <td>NaN</td>\n","      <td>provide full time permanent position many medi...</td>\n","      <td>experienced project cost control staff enginee...</td>\n","      <td>least 12 year professional experience ability ...</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>23</td>\n","      <td>98</td>\n","      <td>0</td>\n","      <td>120</td>\n","      <td>US</td>\n","      <td>TX</td>\n","      <td>Houston</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17878</th>\n","      <td>graphic designer</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>nemsia studio look experienced visual graphic ...</td>\n","      <td>1 must fluent late version corel amp adobe cc ...</td>\n","      <td>competitive salary compensation base experienc...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Contract</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>58</td>\n","      <td>20</td>\n","      <td>43</td>\n","      <td>NG</td>\n","      <td>LA</td>\n","      <td>Lagos</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17879</th>\n","      <td>web application developer</td>\n","      <td>Engineering</td>\n","      <td>vend look awesome new talent come join u work ...</td>\n","      <td>vend award win web base point sale software re...</td>\n","      <td>want hear depth understand oo programmingyou t...</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Full-time</td>\n","      <td>...</td>\n","      <td>170</td>\n","      <td>92</td>\n","      <td>0</td>\n","      <td>194</td>\n","      <td>NZ</td>\n","      <td>N</td>\n","      <td>Wellington</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>17880 rows × 35 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e5e8450-4280-47ee-966c-2475edd7c0bd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e5e8450-4280-47ee-966c-2475edd7c0bd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e5e8450-4280-47ee-966c-2475edd7c0bd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}],"source":["data = pd.read_csv('/content/drive/MyDrive/BT4012/data_39.csv', engine='python', on_bad_lines='warn', encoding= \"UTF-8\")\n","data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":415,"status":"ok","timestamp":1668683589406,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"Hlbhdb_ClnNL","outputId":"4cc7b8ff-10f4-4057-b63d-5fdda1b59329"},"outputs":[{"output_type":"stream","name":"stdout","text":["17880\n"]}],"source":["# Save original copy\n","original_data = data.copy()\n","print(len(original_data))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BFYgSsSV6fhN"},"outputs":[],"source":["# drop columns not required for this dataset\n","data.drop(['combined_text'], axis=1, inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1668683591363,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"a3qVf-YxVaKk","outputId":"67cccc69-aab8-49f4-ea12-72fcc1bbfee2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              title department  \\\n","0  marketing intern  Marketing   \n","\n","                                     company_profile  \\\n","0  food52 create groundbreaking award win cooking...   \n","\n","                                         description  \\\n","0  food52 fast grow james beard award win online ...   \n","\n","                                        requirements benefits  telecommuting  \\\n","0  experience content management system major plu...      NaN              0   \n","\n","   has_company_logo  has_questions employment_type  ...  \\\n","0                 1              0           Other  ...   \n","\n","  company_profile_length requirements_length benefits_length  \\\n","0                     90                  77               0   \n","\n","  description_length  country  state      city  min_salary  max_salary  \\\n","0                 84       US     NY  New York           0           0   \n","\n","   salary_specified  \n","0                 0  \n","\n","[1 rows x 34 columns]"],"text/html":["\n","  <div id=\"df-936ad8c9-9d5c-4888-9d59-7c0ebea95f1a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>department</th>\n","      <th>company_profile</th>\n","      <th>description</th>\n","      <th>requirements</th>\n","      <th>benefits</th>\n","      <th>telecommuting</th>\n","      <th>has_company_logo</th>\n","      <th>has_questions</th>\n","      <th>employment_type</th>\n","      <th>...</th>\n","      <th>company_profile_length</th>\n","      <th>requirements_length</th>\n","      <th>benefits_length</th>\n","      <th>description_length</th>\n","      <th>country</th>\n","      <th>state</th>\n","      <th>city</th>\n","      <th>min_salary</th>\n","      <th>max_salary</th>\n","      <th>salary_specified</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>marketing intern</td>\n","      <td>Marketing</td>\n","      <td>food52 create groundbreaking award win cooking...</td>\n","      <td>food52 fast grow james beard award win online ...</td>\n","      <td>experience content management system major plu...</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>Other</td>\n","      <td>...</td>\n","      <td>90</td>\n","      <td>77</td>\n","      <td>0</td>\n","      <td>84</td>\n","      <td>US</td>\n","      <td>NY</td>\n","      <td>New York</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1 rows × 34 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-936ad8c9-9d5c-4888-9d59-7c0ebea95f1a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-936ad8c9-9d5c-4888-9d59-7c0ebea95f1a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-936ad8c9-9d5c-4888-9d59-7c0ebea95f1a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}],"source":["data.head(1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Pao2jal6VPem"},"outputs":[],"source":["# convert categorical features to numerical\n","\n","text_features = ['title', 'company_profile', 'description', 'requirements', 'benefits']\n","\n","cat_features = ['department', 'employment_type', 'required_experience', 'required_education', 'industry', \n","                'function', 'country', 'state', 'city']\n","\n","le = preprocessing.LabelEncoder()\n","for i in data.columns:\n","    if i in cat_features or i in text_features:\n","        le.fit(data[i])\n","        data[i]=le.transform(data[i])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":434,"status":"ok","timestamp":1668683597599,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"dIrYP1zeMQsZ","outputId":"96a00cba-bf53-46f1-de87-0c4698ba781f"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 17880 entries, 0 to 17879\n","Data columns (total 34 columns):\n"," #   Column                  Non-Null Count  Dtype\n","---  ------                  --------------  -----\n"," 0   title                   17880 non-null  int64\n"," 1   department              17880 non-null  int64\n"," 2   company_profile         17880 non-null  int64\n"," 3   description             17880 non-null  int64\n"," 4   requirements            17880 non-null  int64\n"," 5   benefits                17880 non-null  int64\n"," 6   telecommuting           17880 non-null  int64\n"," 7   has_company_logo        17880 non-null  int64\n"," 8   has_questions           17880 non-null  int64\n"," 9   employment_type         17880 non-null  int64\n"," 10  required_experience     17880 non-null  int64\n"," 11  required_education      17880 non-null  int64\n"," 12  industry                17880 non-null  int64\n"," 13  function                17880 non-null  int64\n"," 14  fraudulent              17880 non-null  int64\n"," 15  has_dollar_sign         17880 non-null  int64\n"," 16  has_email               17880 non-null  int64\n"," 17  has_phone_number        17880 non-null  int64\n"," 18  has_company_profile     17880 non-null  int64\n"," 19  has_requirements        17880 non-null  int64\n"," 20  has_benefits            17880 non-null  int64\n"," 21  has_employment_type     17880 non-null  int64\n"," 22  has_description         17880 non-null  int64\n"," 23  combined_text_length    17880 non-null  int64\n"," 24  company_profile_length  17880 non-null  int64\n"," 25  requirements_length     17880 non-null  int64\n"," 26  benefits_length         17880 non-null  int64\n"," 27  description_length      17880 non-null  int64\n"," 28  country                 17880 non-null  int64\n"," 29  state                   17880 non-null  int64\n"," 30  city                    17880 non-null  int64\n"," 31  min_salary              17880 non-null  int64\n"," 32  max_salary              17880 non-null  int64\n"," 33  salary_specified        17880 non-null  int64\n","dtypes: int64(34)\n","memory usage: 4.6 MB\n"]}],"source":["# ensure that all columns are numerical\n","data.info()"]},{"cell_type":"markdown","metadata":{"id":"89rg53GBDrCS"},"source":["## Stratified Sampling"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":450,"status":"ok","timestamp":1668683600273,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"S0vINUoyl_cK","outputId":"11cae6e8-2b9f-4791-96d8-9ef8c91281ea"},"outputs":[{"output_type":"stream","name":"stdout","text":["(10728, 33)\n","(3576, 33)\n","(3576, 33)\n"]}],"source":["# split data into train, validation, and test in the ratio of 3:1:1\n","X = data.drop(['fraudulent'], axis=1)\n","Y = data[\"fraudulent\"]\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=1, stratify=Y)\n","\n","X_train, X_val, Y_train, Y_val = train_test_split(X_train, Y_train, test_size=0.25, random_state=1, stratify=Y_train) # 0.25 x 0.8 = 0.2\n","\n","print(X_train.shape)\n","print(X_val.shape)\n","print(X_test.shape)"]},{"cell_type":"markdown","metadata":{"id":"0pCqAY8OpNQS"},"source":["## Hyperparameter tuning"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2,"status":"ok","timestamp":1668683601746,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"4469noBopRhE","outputId":"00c62721-3368-419a-d922-28c5d20e38fd"},"outputs":[{"output_type":"stream","name":"stdout","text":["{'bootstrap': [True, False],\n"," 'max_depth': [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, None],\n"," 'max_features': ['auto', 'sqrt'],\n"," 'min_samples_leaf': [1, 2, 4],\n"," 'min_samples_split': [2, 5, 10],\n"," 'n_estimators': [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000]}\n"]}],"source":["from sklearn.model_selection import RandomizedSearchCV\n","# Number of trees in random forest\n","n_estimators = [int(x) for x in np.linspace(start = 200, stop = 2000, num = 10)]\n","# Number of features to consider at every split\n","max_features = ['auto', 'sqrt']\n","# Maximum number of levels in tree\n","max_depth = [int(x) for x in np.linspace(10, 110, num = 11)]\n","max_depth.append(None)\n","# Minimum number of samples required to split a node\n","min_samples_split = [2, 5, 10]\n","# Minimum number of samples required at each leaf node\n","min_samples_leaf = [1, 2, 4]\n","# Method of selecting samples for training each tree\n","bootstrap = [True, False]\n","# Create the random grid\n","random_grid = {'n_estimators': n_estimators,\n","               'max_features': max_features,\n","               'max_depth': max_depth,\n","               'min_samples_split': min_samples_split,\n","               'min_samples_leaf': min_samples_leaf,\n","               'bootstrap': bootstrap}\n","\n","import pprint\n","pp = pprint.PrettyPrinter()\n","pp.pprint(random_grid)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ndtNYh8_pda-","executionInfo":{"status":"ok","timestamp":1668685487242,"user_tz":-480,"elapsed":1875606,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"}},"outputId":"56f595a5-864c-419b-9fbd-6380570f22a4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 4 folds for each of 50 candidates, totalling 200 fits\n"]},{"output_type":"execute_result","data":{"text/plain":["RandomizedSearchCV(cv=4, estimator=RandomForestClassifier(), n_iter=50,\n","                   n_jobs=-1,\n","                   param_distributions={'bootstrap': [True, False],\n","                                        'max_depth': [10, 20, 30, 40, 50, 60,\n","                                                      70, 80, 90, 100, 110,\n","                                                      None],\n","                                        'max_features': ['auto', 'sqrt'],\n","                                        'min_samples_leaf': [1, 2, 4],\n","                                        'min_samples_split': [2, 5, 10],\n","                                        'n_estimators': [200, 400, 600, 800,\n","                                                         1000, 1200, 1400, 1600,\n","                                                         1800, 2000]},\n","                   random_state=42, verbose=2)"]},"metadata":{},"execution_count":14}],"source":["# Use the random grid to search for best hyperparameters\n","rf = RandomForestClassifier()\n","# Random search of parameters, using 4 fold cross validation, \n","# search across 50 different combinations, and use all available cores\n","rf_random = RandomizedSearchCV(estimator = rf, param_distributions = random_grid, n_iter = 50 , cv = 4, verbose=2, random_state=42, n_jobs = -1)\n","# Fit the random search model\n","rf_random.fit(X_train, Y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":822,"status":"ok","timestamp":1668685564401,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"Wo9oUltxiq4r","outputId":"1e43d147-a55f-400f-ea72-b6a7661ff812"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'n_estimators': 1000,\n"," 'min_samples_split': 2,\n"," 'min_samples_leaf': 1,\n"," 'max_features': 'auto',\n"," 'max_depth': 50,\n"," 'bootstrap': False}"]},"metadata":{},"execution_count":15}],"source":["rf_random.best_params_"]},{"cell_type":"markdown","metadata":{"id":"xSZSxN2Mz9y-"},"source":["## Finding optimum number of parameters"]},{"cell_type":"markdown","metadata":{"id":"9hL_y3wkLw-r"},"source":["The Random Forest model will now be fitted using the optimum values for the hyperparameters."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21427,"status":"ok","timestamp":1668685673832,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"m5IMwtV7lHCo","outputId":"a39d8ac0-08fc-4cfd-a1e4-3f20bba65771"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy on training data: 1.0\n","Precision on training data: 1.0\n","Recall on training data: 1.0\n","\n","\n","Accuracy on validation data: 0.9815436241610739\n","Precision on validation data: 0.9819819819819819\n","Recall on validation data: 0.630057803468208\n","CPU times: user 20.4 s, sys: 45.7 ms, total: 20.5 s\n","Wall time: 20.9 s\n"]}],"source":["%%time\n","# n_estimators = number of decision trees\n","rf = RandomForestClassifier(n_estimators = 1000, min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', max_depth = 50, bootstrap = False)\n","rf.fit(X_train, Y_train)\n","\n","#Predicting X_train\n","predicted_Y_train = rf.predict(X_train)\n","accuracy_train = metrics.accuracy_score(Y_train, predicted_Y_train)\n","precision_train = metrics.precision_score(Y_train, predicted_Y_train)\n","recall_train = recall_score(Y_train, predicted_Y_train)\n","print(\"Accuracy on training data:\", accuracy_train)\n","print(\"Precision on training data:\", precision_train)\n","print(\"Recall on training data:\", recall_train)\n","print(\"\\n\")\n","\n","#Predicting X_val\n","predicted_Y_val = rf.predict(X_val)\n","accuracy_val = metrics.accuracy_score(Y_val, predicted_Y_val)\n","precision_val = metrics.precision_score(Y_val, predicted_Y_val)\n","recall_val = recall_score(Y_val, predicted_Y_val)\n","print(\"Accuracy on validation data:\", accuracy_val)\n","print(\"Precision on validation data:\", precision_val)\n","print(\"Recall on validation data:\", recall_val)"]},{"cell_type":"markdown","metadata":{"id":"NTvTIwdhLgsR"},"source":["The above results on training data indicates that it is highly likely that the model is overfitted. Hence, we will now reduce the number of parameters one at at time and retraining the model, and compare their results."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":643},"executionInfo":{"elapsed":659,"status":"ok","timestamp":1668685685395,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"w15-M8lZYwYG","outputId":"bb2fc172-5ddf-47c4-cac8-12b784c40b1d"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:7: RuntimeWarning: divide by zero encountered in log\n","  import sys\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1296x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# a visualisation on the importance of each features\n","# Chose ML model\n","feature_dict=dict(zip((X_train.columns),list(rf.feature_importances_)))\n","\n","log_val = []\n","for i in feature_dict.values():\n","    log_val.append(np.log(i))\n","\n","log_val = np.nan_to_num(log_val, neginf=0)\n","log_val = [i * (-1) for i in log_val]\n","names = list(feature_dict.keys())\n","dictionary = dict(zip(names, log_val))\n","\n","sorted_dict = dict(sorted(dictionary.items(), key=lambda item: item[1], reverse = True))\n","names = []\n","values = []\n","\n","for k, v in sorted_dict.items():\n","    if v != -0.0:\n","        names.append(k)\n","        values.append(v)\n","        \n","plt.figure(figsize = (18, 10))\n","plt.barh(range(len(values)), values, tick_label=names)\n","plt.xticks(rotation=45)\n","plt.title('Feature importance')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ENzKprvddPmA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1668686498612,"user_tz":-480,"elapsed":719394,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"}},"outputId":"2a92ea32-172c-4a33-8b8b-edcf39de0143"},"outputs":[{"output_type":"stream","name":"stdout","text":["Initial Model: Accuracy: 98.070%, Precision: 98.198%, Recall: 63.006%\n","Thresh=0.00000, n=33, Accuracy: 98.070%, Precision: 97.321%, Recall: 63.006%\n","Thresh=0.00000, n=33, Accuracy: 98.070%, Precision: 97.297%, Recall: 62.428%\n","Thresh=0.00000, n=33, Accuracy: 98.070%, Precision: 97.321%, Recall: 63.006%\n","Thresh=0.00046, n=30, Accuracy: 98.070%, Precision: 97.297%, Recall: 62.428%\n","Thresh=0.00456, n=29, Accuracy: 98.070%, Precision: 97.297%, Recall: 62.428%\n","Thresh=0.00462, n=28, Accuracy: 98.070%, Precision: 97.321%, Recall: 63.006%\n","Thresh=0.00493, n=27, Accuracy: 98.070%, Precision: 97.321%, Recall: 63.006%\n","Thresh=0.00635, n=26, Accuracy: 98.070%, Precision: 96.522%, Recall: 64.162%\n","Thresh=0.00657, n=25, Accuracy: 98.070%, Precision: 97.368%, Recall: 64.162%\n","Thresh=0.01226, n=24, Accuracy: 98.070%, Precision: 96.491%, Recall: 63.584%\n","Thresh=0.01437, n=23, Accuracy: 98.070%, Precision: 94.737%, Recall: 62.428%\n","Thresh=0.01633, n=22, Accuracy: 98.070%, Precision: 95.652%, Recall: 63.584%\n","Thresh=0.01946, n=21, Accuracy: 98.070%, Precision: 95.652%, Recall: 63.584%\n","Thresh=0.02426, n=20, Accuracy: 98.070%, Precision: 96.460%, Recall: 63.006%\n","Thresh=0.02434, n=19, Accuracy: 98.070%, Precision: 92.241%, Recall: 61.850%\n","Thresh=0.02522, n=18, Accuracy: 98.070%, Precision: 92.437%, Recall: 63.584%\n","Thresh=0.02815, n=17, Accuracy: 98.070%, Precision: 91.667%, Recall: 63.584%\n","Thresh=0.03085, n=16, Accuracy: 98.070%, Precision: 90.833%, Recall: 63.006%\n","Thresh=0.03298, n=15, Accuracy: 98.070%, Precision: 93.103%, Recall: 62.428%\n","Thresh=0.03697, n=14, Accuracy: 98.070%, Precision: 91.379%, Recall: 61.272%\n","Thresh=0.03974, n=13, Accuracy: 98.070%, Precision: 91.736%, Recall: 64.162%\n","Thresh=0.04020, n=12, Accuracy: 98.070%, Precision: 90.244%, Recall: 64.162%\n","Thresh=0.04204, n=11, Accuracy: 98.070%, Precision: 90.244%, Recall: 64.162%\n","Thresh=0.04213, n=10, Accuracy: 98.070%, Precision: 89.831%, Recall: 61.272%\n","Thresh=0.04543, n=9, Accuracy: 98.070%, Precision: 87.705%, Recall: 61.850%\n","Thresh=0.04734, n=8, Accuracy: 98.070%, Precision: 89.565%, Recall: 59.538%\n","Thresh=0.05190, n=7, Accuracy: 98.070%, Precision: 87.826%, Recall: 58.382%\n","Thresh=0.05494, n=6, Accuracy: 98.070%, Precision: 85.714%, Recall: 55.491%\n","Thresh=0.05719, n=5, Accuracy: 98.070%, Precision: 83.740%, Recall: 59.538%\n","Thresh=0.06184, n=4, Accuracy: 98.070%, Precision: 74.825%, Recall: 61.850%\n","Thresh=0.06954, n=3, Accuracy: 98.070%, Precision: 73.723%, Recall: 58.382%\n","Thresh=0.06979, n=2, Accuracy: 98.070%, Precision: 67.284%, Recall: 63.006%\n","Thresh=0.08524, n=1, Accuracy: 98.070%, Precision: 53.977%, Recall: 54.913%\n","Thresh=0.00635, n=26, Accuracy: 0.982%, Precision: 0.965%, Recall: 0.642%\n","CPU times: user 11min 54s, sys: 1.19 s, total: 11min 56s\n","Wall time: 11min 58s\n"]}],"source":["%%time\n","\n","import warnings\n","warnings.simplefilter(\"ignore\", UserWarning)\n","\n","# fit model on all training data\n","model = RandomForestClassifier(n_estimators = 1000, min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', max_depth = 50, bootstrap = False)\n","model.fit(X_train, Y_train)\n","\n","# make predictions for validation data and evaluate\n","y_pred = model.predict(X_val)\n","\n","accuracy = metrics.accuracy_score(Y_val, y_pred)\n","precision = metrics.precision_score(Y_val, y_pred)\n","recall = recall_score(Y_val, y_pred)\n","print(\"Initial Model: Accuracy: %.3f%%, Precision: %.3f%%, Recall: %.3f%%\" % (accuracy*100.0, precision_val*100, recall_val*100))\n","\n","# Fit model using each importance as a threshold\n","thresholds = sort(model.feature_importances_)\n","\n","highest_thr = 0\n","highest_n = 0\n","highest_acc = 0\n","highest_pre = 0\n","highest_rec = -1000\n","\n","for thresh in thresholds:\n","\t# select features using threshold\n","\tselection = SelectFromModel(model, threshold=thresh, prefit=True)\n","\tselect_X_train = selection.transform(X_train)\n","\t# train model\n","\tselection_model = RandomForestClassifier(n_estimators = 1000, min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', max_depth = 50, bootstrap = False)\n","\tselection_model.fit(select_X_train, Y_train)\n"," \n","\t# eval model\n","\tselect_X_val = selection.transform(X_val)\n","\tpredicted_Y_val = selection_model.predict(select_X_val)\n"," \n","\taccuracy_val = metrics.accuracy_score(Y_val, predicted_Y_val)\n","\tprecision_val = metrics.precision_score(Y_val, predicted_Y_val)\n","\trecall_val = recall_score(Y_val, predicted_Y_val)\n"," \n","\tprint(\"Thresh=%.5f, n=%d, Accuracy: %.3f%%, Precision: %.3f%%, Recall: %.3f%%\" % (thresh, select_X_train.shape[1], accuracy*100.0, precision_val*100, recall_val*100))\n"," \n","\t# we want the model with highest recall\n","\tif recall_val > highest_rec:\n","\t\thighest_thr = thresh\n","\t\thighest_n = select_X_train.shape[1]\n","\t\thighest_acc = accuracy_val\n","\t\thighest_pre = precision_val\n","\t\thighest_rec = recall_val\n","\n","print(\"Thresh=%.5f, n=%d, Accuracy: %.3f%%, Precision: %.3f%%, Recall: %.3f%%\" % (highest_thr, highest_n, highest_acc, highest_pre, highest_rec))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":45406,"status":"ok","timestamp":1668686733516,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"3lg5SvulfkE6","outputId":"3644cabb-502b-4ba0-f503-961410b71c75"},"outputs":[{"output_type":"stream","name":"stdout","text":["Thresh=0.042, n=9, Accuracy: 97.707%, Precision: 87.603%, Recall: 61.272%\n"]}],"source":["# choosing the most suitable number of parameters\n","\n","opm_thresh = 0.04204\n","\n","# create model\n","model = RandomForestClassifier(n_estimators = 1000, min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', max_depth = 50, bootstrap = False)\n","model.fit(X_train, Y_train)\n","\n","# select subset of features\n","selection = SelectFromModel(model, threshold=opm_thresh, prefit=True)\n","select_X_train = selection.transform(X_train)\n","\n","# train model\n","selection_model = RandomForestClassifier(n_estimators = 1000, min_samples_split = 2, min_samples_leaf = 1, max_features = 'auto', max_depth = 50, bootstrap = False)\n","selection_model.fit(select_X_train, Y_train)\n","\n","# eval model\n","select_X_val = selection.transform(X_val)\n","predicted_Y_val = selection_model.predict(select_X_val)\n","accuracy_val = metrics.accuracy_score(Y_val, predicted_Y_val)\n","precision_val = metrics.precision_score(Y_val, predicted_Y_val)\n","recall_val = recall_score(Y_val, predicted_Y_val)\n","\n","print(\"Thresh=%.3f, n=%d, Accuracy: %.3f%%, Precision: %.3f%%, Recall: %.3f%%\" % (opm_thresh, select_X_train.shape[1], accuracy_val*100, precision_val*100, recall_val*100))"]},{"cell_type":"markdown","metadata":{"id":"ZEELBI_2dQPw"},"source":["## Predicting on test data"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":690,"status":"ok","timestamp":1668686808155,"user":{"displayName":"Jia Ming Chu","userId":"00754938552113858035"},"user_tz":-480},"id":"uTZyLJYlm4D1","outputId":"3ffd7b07-4c5d-4ea4-b39a-94633f10a674"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy on test data: 0.9798657718120806\n","Precision on test data: 0.8914728682170543\n","Recall on test data: 0.6647398843930635\n","F1 score on test data: 0.7615894039735099\n","MSE on test data: 0.020134228187919462\n","CPU times: user 761 ms, sys: 2.01 ms, total: 763 ms\n","Wall time: 763 ms\n"]}],"source":["%%time\n","\n","select_X_test = selection.transform(X_test)\n","predicted_Y_test = selection_model.predict(select_X_test)\n","\n","accuracy_test = metrics.accuracy_score(Y_test, predicted_Y_test)\n","precision_test = metrics.precision_score(Y_test, predicted_Y_test)\n","recall_test = metrics.recall_score(Y_test, predicted_Y_test)\n","f1_test = metrics.f1_score(Y_test, predicted_Y_test)\n","mse_test = metrics.mean_squared_error(Y_test, predicted_Y_test)\n","\n","print(\"Accuracy on test data:\", accuracy_test)\n","print(\"Precision on test data:\", precision_test)\n","print(\"Recall on test data:\", recall_test)\n","print(\"F1 score on test data:\", f1_test)\n","print(\"MSE on test data:\", mse_test)"]},{"cell_type":"markdown","metadata":{"id":"-NqWjZEmD7OR"},"source":["From the results above, recall seems to plateau around 65% despite changing the number of variables. "]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[{"file_id":"1eZy8G5eMQkFct5S85lK43k1F3g-5drH7","timestamp":1668687441509},{"file_id":"1SP6Q9vB9rvQ5jDZ4giBPrAcNwxx0-2mp","timestamp":1668414334337}],"authorship_tag":"ABX9TyNpn7KV6sfEQ5j2eNdU7dkk"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}